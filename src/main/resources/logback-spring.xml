<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    ​
    <!-- WARN: Logback ignores properties set in the bootstrap.yml -->
    <springProperty scope="context" name="appName" source="spring.application.name"/>
    <springProperty scope="context" name="instanceId" source="spring.application.instance-id"/>

    <!-- Name of the log file without extension -->
    <property name="LOG_FILE" value="/tmp/log/preving/base-api/${instanceId}"/>

    <!-- Human friendly pattern with bells, lights and whistles -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <!-- Appender to log to console -->
    <appender name="consoleLocal" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented in this appender -->
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented in this appender -->
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- Appender to log to file, used to show human readable logs in SBA -->​
    <appender name="fileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented in this appender -->
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.log.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>
    ​
    <!-- Appender to log to file in a JSON format -->
    <appender name="jsonAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}.json</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented in this appender -->
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.json.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <!-- Pattern defining what would be written in the log and how. -->
                <pattern>
                    <pattern>
                        {
                        "level": "%level",
                        "application": "${appName:-}",
                        "instanceId": "${instanceId:-}",
                        "traceId": "%X{X-B3-TraceId:-}",
                        "spanId": "%X{X-B3-SpanId:-}",
                        "parentId": "%X{X-B3-ParentSpanId:-}",
                        "pid": "${PID:-}",
                        "thread": "%thread",
                        "message": "%message"
                        }
                    </pattern>
                </pattern>

                <!-- Provider of data to be used in the pattern. -->
                <timestamp>
                    <timeZone>UTC</timeZone>
                </timestamp>

                <!-- Shows class, method, line and file where the log was written. -->
                <callerData>
                    <classFieldName>class</classFieldName>
                    <methodFieldName>method</methodFieldName>
                    <lineFieldName>line</lineFieldName>
                    <fileFieldName>file</fileFieldName>
                </callerData>

                <!-- To show data logged with v(). -->
                <arguments>
                    <includeNonStructuredArguments>false</includeNonStructuredArguments>
                </arguments>

                <!-- Shows exceptions strack traces. -->
                <stackTrace>
                    <fieldName>stack</fieldName>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>30</maxDepthPerThrowable>
                        <maxLength>512</maxLength>
                        <shortenedClassNameLength>20</shortenedClassNameLength>
                        <exclude>sun\.reflect\..*\.invoke.*</exclude>
                        <exclude>net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
                        <rootCauseFirst>true</rootCauseFirst>
                        <inlineHash>true</inlineHash>
                    </throwableConverter>
                </stackTrace>
            </providers>
        </encoder>
    </appender>

    <!-- Async log writing make logs faster and more secure. -->
    <appender name="asyncFile" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="fileAppender"/>
    </appender>

    <appender name="asyncLogstash" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="jsonAppender"/>
    </appender>

    <!-- Configuration of logs by environment, using profiles -->​

    <!-- Local development -->
    <springProfile name="!(staging | production)">
        <logger name="com.preving.restapi" level="DEBUG" />
        <root level="INFO">
            <appender-ref ref="consoleLocal"/>
            <appender-ref ref="asyncFile"/>
            <appender-ref ref="asyncLogstash"/>
        </root>
    </springProfile>

    <!-- Staging -->
    <springProfile name="staging">
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="asyncFile"/>
            <appender-ref ref="asyncLogstash"/>
        </root>
    </springProfile>

    <!-- Production -->
    <springProfile name="production">
        <root level="INFO">
            <appender-ref ref="console"/>
            <appender-ref ref="asyncFile"/>
            <appender-ref ref="asyncLogstash"/>
        </root>
    </springProfile>

</configuration>